enclave {
    struct POD_t {
        uint32_t a;
        uint64_t b;
    };

    struct NonePOD_t {
        POD_t *ptr;
    };
        
    trusted {
        public void ecall_naked_function(void);
        public void ecall_test_enclave(void);
        public void ecall_test_libc(void);
        
        public void ecall_ptr_pass([in] int *in, [out] int *out);
        public void ecall_ptr_inout([in,out] int *val);
        public void ecall_ptr_user([user_check] int *val);

        public void ecall_struct_inout([in,out] NonePOD_t *npod, POD_t pod);
    
    };
    untrusted {
        void ocall_print_string([in, string] const char *str);

        void ocall_ptr_pass([in] int *in, [out] int *out);
        void ocall_ptr_inout([in,out] int *val);
        void ocall_ptr_user([user_check] int *val);

        void ocall_print_status(sgx_status_t i);

        void ocall_struct_inout([in,out] NonePOD_t *npod, POD_t pod);
    };

};
